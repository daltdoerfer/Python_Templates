# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QMainWindow_Convert.ui'
#
# Created by: PyQt5 UI code generator 5.15.3
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, pyqtSlot
#from PyQt5.QtWidgets import QMainWindow, QApplication, QPushButton, QTextEdit, QLineEdit, QWidget
from PyQt5.QtWidgets import *
from datetime import datetime
import os

class Ui_MainWindow(QMainWindow):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(468, 193)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 441, 61))
        self.groupBox.setObjectName("groupBox")
        self.widget = QtWidgets.QWidget(self.groupBox)
        self.widget.setGeometry(QtCore.QRect(10, 20, 421, 26))
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)

        self.loadBtn = QtWidgets.QPushButton(self.widget)
        self.loadBtn.setObjectName("loadBtn")

        self.horizontalLayout.addWidget(self.loadBtn)
        self.exeBtn = QtWidgets.QPushButton(self.centralwidget)

        self.exeBtn.setGeometry(QtCore.QRect(300, 80, 141, 61))
        self.exeBtn.setObjectName("exeBtn")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 468, 22))
        self.menubar.setObjectName("menubar")
        self.menuStart = QtWidgets.QMenu(self.menubar)
        self.menuStart.setObjectName("menuStart")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionLoad_File = QtWidgets.QAction(MainWindow)
        self.actionLoad_File.setObjectName("actionLoad_File")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionVersion = QtWidgets.QAction(MainWindow)
        self.actionVersion.setObjectName("actionVersion")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")

        self.menuStart.addAction(self.actionLoad_File)
        self.menuStart.addSeparator()
        self.menuStart.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionVersion)
        self.menuHelp.addAction(self.actionHelp)
        self.menubar.addAction(self.menuStart.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #######################################################
        #           Initialsisierung
        ########################################################
        #self.lineEdit.setObjectName("lineEdit")

        self.loadBtn.clicked.connect(self.function_file_dialogue)
        self.exeBtn.setEnabled(False)
        self.exeBtn.clicked.connect(self.function_start_conversion)

        self.flag_load_file = 0

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "Load .ui File"))
        self.loadBtn.setText(_translate("MainWindow", "Load"))
        self.exeBtn.setText(_translate("MainWindow", "Convert"))
        self.menuStart.setTitle(_translate("MainWindow", "Start"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionLoad_File.setText(_translate("MainWindow", "Load File"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionVersion.setText(_translate("MainWindow", "Version"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))

    #######################################################
    #                   Declare Function
    ########################################################

    @pyqtSlot()
    def function_file_dialogue(self):
        print("Test")
        fd = QFileDialog() # Abfrage mit Button -> wenn ok -> rückgabe in "font" ist aktuelle Schriftart
        start_path = os.getcwd() # Aktuellen Pfad verwenden
        self.fileName = fd.getOpenFileName(self, 'Datei öffnen', start_path, 'Designer-Formate (*.ui)') # getOpenFileName(self, <Anzeige>, <Startpfad>, <Dateiauswahl>

        self.lineEdit.setText(f"{self.fileName[0]}")

        self.flag_load_file = 1
        if self.flag_load_file == 1:
            self.exeBtn.setEnabled(True)

    @pyqtSlot()
    def function_start_conversion(self):

        if self.flag_load_file:  # Wenn Datei ausgewählt wurde wird funktion freigeschaltet

            if self.fileName[0]:

                print("Start Conversion")
                print(self.fileName)

                # Gesamtpfad splitten in Pfad und Dateinamen
                dir_path, filename = os.path.split(self.fileName[0])
                print(f"Directory of source file: {dir_path}, Filename: {filename}")

                now = datetime.now()  # current date and time
                date_time = now.strftime("%Y%d%m_%H%M%S_")

                # Ausführung der Command Lines zur erzeugung der EXE File
                # pyuic5 -x filename.ui > filename.py
                command_1 = fr'start cmd /k cd {dir_path}'
                command_2 = fr'pyuic5 -x {filename} > {date_time}{filename[:-3]}.py'
                #self.le1.setText(f">> {command_2} ")
                print(command_2)
                os.system(command_1)
                os.system(command_2)

        else:
            print("Keine Designer-Datei ausgewählt")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
